1. repo批处理
  1） 打标签
	.repo/repo/repo  forall -c "pwd;git tag Android_4.4.4_r2_APK_ES_017cd"
  2） 上传标签
	.repo/repo/repo  forall -c "pwd;git push --tag"

2.git reset --hard HEAD 执行此命令代码将会还原到HEAD对应的代码

3.git pull 更新代码

4.git status 查询当前项目中的文件和本地仓库中的文件差异

5.git diff 查询当前仓库中的文件的改动

6.git add XXXXX 将改动或者需要提交的代码加到本地仓库中

7.git commit -m "xxxxxx" 提交代码，并添加描述信息

8.git push 将本地代码提交到服务器

9.git branch -a 查看当前项目中所有的分支

10.git checkout XXXXXX 切换到分支
   git checkout -b XXXXX 新建XXXXX分支并切换过去
   git checkout -- XXXXXX 丢弃工作区某个文件的修改

11.git branch -b XXXXXX 新建分支

12.git clean -nxfd 删除未跟踪的文件
   git clean -nf
   git clean -nfd

13.分支的创建提交
    ------------------------------------------------------------
regan@THTFIT-Compiler:~/a83t/android/frameworks/base$ git config -l
user.email=regan@thtfit.com
user.name=regan
color.ui=auto
core.repositoryformatversion=0
core.filemode=true
remote.lichee.url=git:projects/workdir/allwinner/A83T/android/platform/frameworks/base.git
remote.lichee.projectname=platform/frameworks/base
remote.lichee.fetch=+refs/heads/*:refs/remotes/lichee/*
branch.a83-v1.3-thtfit.remote=lichee
branch.a83-v1.3-thtfit.merge=a83-v1.3-thtfit
branch.a83-v1.3-thtfit_KDB_hide_NavigationBar.remote=lichee
branch.a83-v1.3-thtfit_KDB_hide_NavigationBar.merge=refs/heads/a83-v1.3-thtfit_KDB_hide_NavigationBar
     ------------------------------------------------------------

    git push lichee a83-v1.3-thtfit_KDB_hide_NavigationBar   提交本地分支a83-v1.3-thtfit_KDB_hide_NavigationBar到远程主分支lichee上

    git branch --set-upstream a83-v1.3-thtfit_KDB_hide_NavigationBar lichee/a83-v1.3-thtfit_KDB_hide_NavigationBar  关联本地分支与远程分支

14.git clone XXXXX 克隆仓库

15.git config -l 查看git的相关配置

16.git merge XXXXX  将XXXX的分支合并到当前分区

17.在某个分支上的修改进行到一半并且你还不能提交当前的代码，这时你可以执行git stash将工作的内容存起来，当完成其他分支上的工作之后，可以切换到之前工作到一般的分支git stash list查看之前的保存，使用git stash apply来恢复，但恢复之后stash内容并不删除，可以使用git stash drop来删除。或者使用git stash pop恢复并删除stash内容。当有多次stash的时候，使用git stash apply stash@{0}

18 git log --graph 图标的形式查看提交信息
